<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

    <mapper namespace="com.howabout.there.mycourse.dao.IMyCourseDao">
    
    <!-- 내코스 가지고 오기-->
    	<select id="getMyCourse" resultType="com.howabout.there.mycourse.dto.MyCourseDto" >
    	SELECT writer, 
			r_name, r_phone, r_do, r_si, r_gu, r_dong, r_cat, r_url, r_id, r_lon, r_lat, r_image_url,
			c_name, c_phone, c_do, c_si, c_gu, c_dong, c_cat, c_url,c_id, c_lon, c_lat ,c_image_url, flag
		FROM course 
			JOIN cafe ON (cafe_id = c_id) 
			JOIN restaurant ON (rest_id = r_id) 
		WHERE writer = #{u_nick} AND flag = 1;
    	</select>
   
   	<!-- 코스가 존재하는지 확인 -->
   		<select id="exisCheck" resultType="Integer">
   		SELECT count(*)
   		FROM course
   		WHERE writer = #{u_nick} AND rest_id = #{r_id} AND cafe_id = #{c_id};
   		</select>
    	
    	
    <!-- 코스 찜하기 -->
		<update id="courseDibs">
		UPDATE course 
      	SET flag = #{flag}, c_update_time = #{time}
      	WHERE  rest_id = #{r_id}  
			AND cafe_id= #{c_id} 
			AND writer = #{u_nick} 
			
		</update>
    
    <!-- userCourse Flag 값 가져오기 -->
    	<select id="checkFlag" resultType="Integer">
    	SELECT flag 
    	FROM course
    	WHERE writer = #{u_nick} AND rest_id = #{r_id} AND cafe_id = #{c_id};
    	</select>
    	
    	
    <!-- restaurant TABLE 저장-->	
		<update id="restSave"> 
		UPDATE restaurant
		SET r_name = #{r_name}, r_phone = #{r_phone}, r_lon = #{r_lon}, r_lat = #{r_lat},
			r_do = #{r_do}, r_si = #{r_si}, r_gu = #{r_gu}, r_dong = #{r_dong}, r_cat = #{r_cat}, r_url = #{r_url},
			r_insert_time = #{r_insert_time}, r_update_time = #{r_update_time},r_image_url = #{r_image_url}
		WHERE r_id = #{r_id};
		</update>
	
	<!-- restaurant TABLE 저장여부 확인-->
   		<select id="restCheck" resultType="Integer">
   		SELECT count(*)
		FROM restaurant
		WHERE r_id = #{r_id};
   		</select>
	
    <!-- cafe TABLE 저장-->
    	<update id="cafeSave"> 
		UPDATE cafe
		SET c_name = #{c_name}, c_phone = #{c_phone}, c_lon = #{c_lon}, c_lat = #{c_lat},
			c_do = #{c_do}, c_si = #{c_si}, c_gu = #{c_gu}, c_dong = #{c_dong}, c_cat = #{c_cat}, c_url = #{c_url},
			c_insert_time = #{c_insert_time}, c_update_time = #{c_update_time},c_image_url = #{c_image_url}
		WHERE c_id = #{c_id};
		</update>
	
   <!-- cafe TABLE 저장여부 확인-->
   		<select id="cafeCheck" resultType="Integer">
   		SELECT count(*)
		FROM cafe
		WHERE c_id = #{c_id};
   		</select>
   		
   <!-- writer  r_id , c_id 우선 저장-->
    	<insert id="inputCourse">
    	INSERT INTO course (writer, rest_id, cafe_id, flag)
    	VALUES(#{writer},#{r_id},#{c_id}, 0);
    	</insert>   
    	
    <!-- course TABLE 저장   update로 바꿔야함    -->
   		<update id="courseSave">
      	UPDATE  course
      	SET rest_name = #{rest_name},
      		cafe_name = #{cafe_name},
      		c_insert_time = #{c_insert_time},
      		c_update_time = #{c_update_time}, 
      		gender = #{gender}, 
      		birth = #{birth}
      	WHERE writer = #{writer} AND rest_id= #{rest_id} AND cafe_id = #{cafe_id} ; 
   		</update>
    	
    <!-- 식당 id 우선 저장-->	
    	<insert id="inputRest">
    	INSERT INTO restaurant (r_id)
    	VALUES (#{id});
    	</insert>
    <!-- 카페 id 우선 저장-->
    	<insert id="inputCafe">
    	INSERT INTO cafe (c_id)
    	VALUES (#{id});
    	</insert>
    	
    	
    <!-- 코스 한개 가지고 오기-->
    	<select id="findOneCourse" resultType="com.howabout.there.mycourse.dto.InputCourseDto">
    	SELECT  
			*
		FROM course 
			JOIN cafe ON (cafe_id = c_id) 
			JOIN restaurant ON (rest_id = r_id) 
		WHERE rest_id = #{r_id} AND cafe_id = #{c_id}
		LIMIT 1;
    	</select>
    	
    	<insert id="oneCourseSave">
       INSERT course (writer, rest_name, rest_id, cafe_name, cafe_id, c_insert_time, c_update_time, gender, birth, flag)
       VALUES(#{writer}, #{rest_name}, #{rest_id}, #{cafe_name}, #{cafe_id}, #{c_insert_time}, #{c_update_time}, #{gender}, #{birth}, #{flag})   
       </insert>
    	
    </mapper>
    
    